import{_ as a,o as e,c as s,Q as l}from"./chunks/framework.cbe154cb.js";const d=JSON.parse('{"title":"无头浏览器","description":"","frontmatter":{"hide":false},"headers":[],"relativePath":"网络/爬虫.md","filePath":"网络/爬虫.md"}'),n={name:"网络/爬虫.md"},o=l(`<h1 id="无头浏览器" tabindex="-1">无头浏览器 <a class="header-anchor" href="#无头浏览器" aria-label="Permalink to &quot;无头浏览器&quot;">​</a></h1><ul><li><p><a href="https://github.com/puppeteer/puppeteer/tree/v1.10.0" target="_blank" rel="noreferrer">Puppeteer</a> : 控制 Chrome 或 Chromium 的 Node 库</p></li><li><p><a href="https://github.com/laispace/puppeteer-explore" target="_blank" rel="noreferrer">Puppeteer 初探-示例</a></p></li><li><p>API</p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 获取上下文句柄</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> bodyHandle </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> frame</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">body</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> html </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> frame</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">evaluate</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> body</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> bodyHandle)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> bodyHandle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispose</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> htmlHandle </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> html </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">evaluate</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> body</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">outerHTML</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> htmlHandle)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> htmlHandle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispose</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">🔥🔥🔥</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> bodyInnerHTML </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$eval</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">body</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">dom</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> dom</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">evaluate: page context</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">evaluateHandle: page context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  page</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">evaluateHandle returns </span><span style="color:#89DDFF;">in-</span><span style="color:#A6ACCD;">page </span><span style="color:#82AAFF;">object</span><span style="color:#A6ACCD;"> (JSHandle)</span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$eval:  browser context</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mainFrame</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(selector)</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> executionContext</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">evaluateHandle:  </span><span style="color:#89DDFF;">in-</span><span style="color:#A6ACCD;">page </span><span style="color:#82AAFF;">object</span><span style="color:#A6ACCD;"> (JSHandle)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> Frame、JSHandle、ElementHandle 可以执行 executionContext</span></span></code></pre></div><ul><li><strong>注意</strong><ul><li>page.screenshot 异步执行，如果在执行截屏之前浏览器已经 <code>close</code> 会报错</li></ul></li></ul><blockquote><p>参考</p></blockquote><p><a href="https://zhangslob.github.io/2017/12/23/%E9%87%87%E9%9B%86%E6%96%B9%E6%A1%88%E7%AD%96%E7%95%A5%E4%B9%8BApp%E6%8A%93%E5%8C%85/" target="_blank" rel="noreferrer">采集方案策略之App抓包</a><a href="https://zhuanlan.zhihu.com/p/76237595" target="_blank" rel="noreferrer">结合项目来谈谈 Puppeteer</a><a href="https://github.com/SeleniumHQ/selenium/tree/trunk/javascript/node/selenium-webdriver#readme" target="_blank" rel="noreferrer">selenium-webdriver node库</a><a href="https://www.browserstack.com/docs/automate/selenium/getting-started/nodejs#run-your-first-test" target="_blank" rel="noreferrer">Run Selenium tests with NodeJS | BrowserStack Docs</a></p><p><a href="https://cloud.tencent.com/developer/article/1842915" target="_blank" rel="noreferrer">selenium-python</a></p><h1 id="爬虫" tabindex="-1">爬虫 <a class="header-anchor" href="#爬虫" aria-label="Permalink to &quot;爬虫&quot;">​</a></h1><p><a href="https://github.com/bda-research/node-crawler" target="_blank" rel="noreferrer">crawler</a></p><p><a href="https://imweb.io/topic/5d230c6df7b5692b080f2668" target="_blank" rel="noreferrer">爬虫实践</a></p><p><a href="https://github.com/wuyanwuyan/wechat-articles-crawler" target="_blank" rel="noreferrer">基于anyproxy的微信公众号文章爬取</a></p><h1 id="微信公众号" tabindex="-1">微信公众号 <a class="header-anchor" href="#微信公众号" aria-label="Permalink to &quot;微信公众号&quot;">​</a></h1><p><a href="https://blog.csdn.net/geanwen/article/details/78733470?spm=1001.2101.3001.6650.13&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-78733470-blog-89485887.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-78733470-blog-89485887.pc_relevant_antiscanv2&amp;utm_relevant_index=19" target="_blank" rel="noreferrer">简单内网映射到公网方法-公众开发-Sunny-Ngrok</a></p><p><a href="https://zhuanlan.zhihu.com/p/268608520" target="_blank" rel="noreferrer">WxPush-知乎</a><a href="https://wxpusher.zjiecode.com/docs/#/" target="_blank" rel="noreferrer">WxPush-文档</a><a href="https://cloud.tencent.com/developer/article/1449326?from=15425" target="_blank" rel="noreferrer">python发送微信及企业微信消息</a><a href="http://docs.wechatpy.org/zh_CN/stable/messages.html" target="_blank" rel="noreferrer">wechatpy 是一个微信 (WeChat) 的第三方 Python SDK, 实现了微信公众号、企业微信和微信支付等 API</a><a href="https://wechatpy.readthedocs.io/zh_CN/stable/client/message.html" target="_blank" rel="noreferrer">wechatpy-自动消息接口</a></p><h2 id="实践" tabindex="-1">实践 <a class="header-anchor" href="#实践" aria-label="Permalink to &quot;实践&quot;">​</a></h2><ol><li>ngrok 将本地IP+端口映射到一个公网域名上</li><li>微信开发平台的URL填写上面的公网地址</li></ol><h1 id="企业微信" tabindex="-1">企业微信 <a class="header-anchor" href="#企业微信" aria-label="Permalink to &quot;企业微信&quot;">​</a></h1><p><a href="https://www.cnblogs.com/37yan/p/15200868.html" target="_blank" rel="noreferrer">借助企业微信实现“调接口”给个人微信发消息</a><a href="https://zhuanlan.zhihu.com/p/465307569" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/465307569</a> WechatPush</p><p>企业微信--自建应用 自建应用和企业微信双向通信</p><h2 id="实践-成功" tabindex="-1">实践 (成功) <a class="header-anchor" href="#实践-成功" aria-label="Permalink to &quot;实践 (成功)&quot;">​</a></h2><blockquote><p>只需要一个企业微信账号</p><p>可以推送给某个人、所有人、某个部门</p></blockquote><ol><li>注册企业微信（不用认证）</li><li>在应用管理新建自建应用</li><li>微信扫描 “企业微信-我的企业-微信插件-邀请关注 ” 中的二维码，这样微信就会收到企业微信的消息通知</li><li>按照 “企业微信开发者中心-消息推送-<a href="https://developer.work.weixin.qq.com/document/path/90372#%E6%B6%88%E6%81%AF%E7%B1%BB%E5%9E%8B" target="_blank" rel="noreferrer">发送应用消息</a>” 文档中的步骤操作，可以直接在本地服务中调用接口推送消息到自建应用</li><li>微信会收到来自企业微信的通知，通知效果和微信联系人发送消息的效果一样（微信首页和锁屏通知）</li></ol><h1 id="微信机器人" tabindex="-1">微信机器人 <a class="header-anchor" href="#微信机器人" aria-label="Permalink to &quot;微信机器人&quot;">​</a></h1><blockquote><p>python中的wxpy、requests模块完成微信的基本操作</p></blockquote><p><a href="https://cloud.tencent.com/developer/article/1497693?from=15425" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/1497693?from=15425</a></p><p><a href="https://cloud.tencent.com/developer/article/1702852?from=15425" target="_blank" rel="noreferrer">Python 微信机器人-向指定名称的好友发送微信消息</a></p><blockquote><p>itchat</p></blockquote><p><a href="https://cloud.tencent.com/developer/article/1449326?from=15425" target="_blank" rel="noreferrer">python发送微信及企业微信消息</a></p><blockquote><p>wechaty</p></blockquote><p><a href="https://juejin.cn/post/6992409675371118622" target="_blank" rel="noreferrer">https://juejin.cn/post/6992409675371118622</a></p><h1 id="短信" tabindex="-1">短信 <a class="header-anchor" href="#短信" aria-label="Permalink to &quot;短信&quot;">​</a></h1><p><a href="https://cloud.tencent.com/developer/article/1536769" target="_blank" rel="noreferrer">用Python每天自动给女朋友免费发短信-twilio</a><a href="https://zhuanlan.zhihu.com/p/100664465" target="_blank" rel="noreferrer">用Python发免费短信的正确姿势-twilio</a><a href="https://zhuanlan.zhihu.com/p/28903372" target="_blank" rel="noreferrer">简单介绍使用python发送短信的方式-Twiio</a></p><h1 id="个人pc接入公网" tabindex="-1">个人PC接入公网 <a class="header-anchor" href="#个人pc接入公网" aria-label="Permalink to &quot;个人PC接入公网&quot;">​</a></h1><ul><li>动态域名解析 + 端口映射 （需要搞个域名）</li><li>使用花生壳之类的内网穿透服务（简单无脑，网速、流量差）</li></ul><blockquote><p><a href="https://natapp.cn/" target="_blank" rel="noreferrer">natapp</a></p></blockquote><p>基于ngrok的内网穿透工具，有了它你可以直接将自己的本机发布到公网。</p><p>在网站上设置映射到本地的ip和端口</p><p>本地跑natapp程序时，会提供公网访问的地址</p><p>如 <a href="http://xxx.xx" target="_blank" rel="noreferrer">http://xxx.xx</a> --&gt; 127.0.0.1:2888</p><blockquote><p><a href="https://www.ngrok.cc/" target="_blank" rel="noreferrer">ngrok</a></p></blockquote><p>Sunny-Ngrok（国内版）</p><blockquote><p><a href="https://github.com/fatedier/frp" target="_blank" rel="noreferrer">frp</a></p><p>需要有公网IP</p></blockquote><p>通过在具有公网 IP 的节点上部署 frp 服务端，可以轻松地将内网服务穿透到公网 搭配<a href="https://www.bt.cn/" target="_blank" rel="noreferrer">宝塔面板</a>弄了个简单的文件服务器</p><blockquote><p>宽带开启公网ip访问家里电脑-麻烦</p></blockquote><ul><li>打电话给运营商要求开通公网ip</li><li>把光猫改为桥接(需要光猫超级管理员密码)</li><li>路由器改为拨号上网</li><li>申请花生壳ddns,用来解析路由器动态ip</li><li>路由器配置ddns</li><li>路由器给需要公网访问的机器做端口映射(不能映射80,443)</li></ul><blockquote><p>参考</p></blockquote><p><a href="https://www.youtube.com/watch?v=8J0Up8B7YkU" target="_blank" rel="noreferrer">软路由 桥接 端口转发 旁路由 单臂路由-视频</a></p><h1 id="获取光猫超级管理员" tabindex="-1">获取光猫超级管理员 <a class="header-anchor" href="#获取光猫超级管理员" aria-label="Permalink to &quot;获取光猫超级管理员&quot;">​</a></h1><p><a href="https://www.bilibili.com/video/BV1Zu411m72m?p=1&amp;share_medium=android&amp;share_plat=android&amp;share_session_id=3fef62aa-9d43-4619-bd01-8d0dfa2baff8&amp;share_source=COPY&amp;share_tag=s_i&amp;timestamp=1641364962&amp;unique_k=M6VAnZz&amp;vd_source=bd65c223ad05da7787aa7edaf82077eb" target="_blank" rel="noreferrer">视频</a></p><p>然后打开网页控制台,选中u盘的目录元素,编辑网页元素, 将目录相关的字段改为&quot;..&quot;, 然后就可以进入上一级目录了, 一直重复这个操作,进入根目录, 然后进入<code>/var/config</code>.将<code>lastgood.xml</code> 复制到u盘, 然后电脑打开u盘上的 <code>lastgood.xml</code>, 里面有一个<code>SUPER_PASSWORD</code>,就是超级管理员密码</p>`,50),t=[o];function p(r,c,i,h,y,D){return e(),s("div",null,t)}const u=a(n,[["render",p]]);export{d as __pageData,u as default};
