import{_ as s,o as a,c as n,V as l}from"./chunks/framework.35aa2305.js";const o="/assets/image-20210905152050579.a3ba740f.png",e="/assets/image-20210912205432926.7dbf09e2.png",h=JSON.parse('{"title":"布局和包含块","description":"","frontmatter":{},"headers":[],"relativePath":"前端/HTML-CSS/总结.md","filePath":"前端/HTML-CSS/总结.md","lastUpdated":1691037194000}'),p={name:"前端/HTML-CSS/总结.md"},t=l('<h1 id="布局和包含块" tabindex="-1">布局和包含块 <a class="header-anchor" href="#布局和包含块" aria-label="Permalink to &quot;布局和包含块&quot;">​</a></h1><blockquote><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block" target="_blank" rel="noreferrer">布局和包含块</a></p></blockquote><p>包含块的作用（意义）：包含块会影响元素的定位和布局、大小。</p><p><code>left</code> 、<code>margin</code>、<code>padding</code>（包括<code>margin-top</code> 和<code> padding-top</code>）的值是百分比时，它们的参考值就是包含块的 <code>width</code>。</p><ul><li>初始包含块 <ul><li>The initial containing block has the dimensions of the viewport and is also the block that contains the <code>&lt;html&gt;</code> element.</li><li><code>&lt;html&gt;</code>根元素所在包含块称为初始化包含块，它的大小和视口的大小一样。</li></ul></li></ul><h2 id="格式化上下文-formatting-context" tabindex="-1"><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context" target="_blank" rel="noreferrer">格式化上下文（formatting context）</a> <a class="header-anchor" href="#格式化上下文-formatting-context" aria-label="Permalink to &quot;[格式化上下文（formatting context）](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context)&quot;">​</a></h2><p>关键词：块级格式上下文</p><p>BFC元素特性表现原则就是，内部子元素再怎么翻江倒海，翻云覆雨都不会影响外部的元素。所以，避免margin穿透啊，清除浮动什么的也好理解了。</p><ul><li>什么情况下会创建BFC</li><li>BFC的作用</li></ul><ol><li>包含内部 float 元素，隔离外部 float 元素</li><li>避免外边距折叠</li></ol><h1 id="定位" tabindex="-1">定位 <a class="header-anchor" href="#定位" aria-label="Permalink to &quot;定位&quot;">​</a></h1><blockquote><p>position: sticky fixed 参考点？ <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position" target="_blank" rel="noreferrer">position-mdn</a></p></blockquote><ul><li><p>z-index、left、top 对静态定位的元素无效。z-index 只作用于非静态定位元素和 <code>flex items</code> 。静态定位元素的 z-index 由该元素所在的 <code>stacking context</code> 决定。</p></li><li><p>相对定位的元素以正常布局的位置为参考进行偏移，被偏移后，该元素偏移前所占的空间仍然还在，不会变化，也不会影响其他元素。</p></li><li><p>绝对定位脱离文档流，不在占由原有的空间，以 <code>containing element</code> 为参考（怎么确定 containing element <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block" target="_blank" rel="noreferrer">包含块</a>）。left、top 指定该元素与包含块之间的距离。不会发生 margin 合并。</p></li><li><p>fixed 固定定位：通常相对于视口的可视区域定位元素</p><ul><li>fixed元素被另一个fixed元素包含的时候在chrome下fixed子元素的定位会受到父元素的影响。</li></ul></li><li><p>sticky</p><ul><li><p>Sticky elements are &quot;sticky&quot; relative to the nearest ancestor with a &quot;scrolling mechanism&quot;, which is determined by its ancestors&#39; <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position" target="_blank" rel="noreferrer">position</a> property。scrolling mechanism 就是 overflow is <code>hidden</code>, <code>scroll</code>, <code>auto</code>, or <code>overlay</code></p></li><li><p>The element is positioned according to the normal flow of the document, and then offset relative to its <strong>nearest scrolling ancestor</strong> and <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block" target="_blank" rel="noreferrer">containing block</a> (nearest block-level ancestor), including table-related elements, based on the values of <code>top</code>, <code>right</code>, <code>bottom</code>, and <code>left</code>. The offset does not affect the position of any other elements。</p></li><li><p>粘性定位元素必须至少设置一个 top、left、right、bottom，没有超出设置的偏移之前元素视为相对定位，否则视为固定定位（直到该元素到达其父元素的边界）。</p></li></ul></li></ul><h1 id="z-index-stacking-context-堆叠上下文" tabindex="-1">z-index | stacking context（堆叠上下文） <a class="header-anchor" href="#z-index-stacking-context-堆叠上下文" aria-label="Permalink to &quot;z-index | stacking context（堆叠上下文）&quot;">​</a></h1><img src="'+o+'" alt="image-20210905152050579" style="zoom:50%;"><p>div1、div2、div3 属于同一个 stacking context，div3 创建了一个新的包含了div4、div5、div6 的上下文，当两个不属于同一个上下文的元素比较 z-index 时，会一直向上直到使这两个元素属于同一个上下文。例如当 div4 与 div1比较 z-index时，div3被看作一个整体（z-index: 4）与 div1 比较。</p><ul><li><p>技巧</p><ul><li>把 z-inde 看作版本号（目录号），从主版本依次进行比较。</li><li>一个dom 元素如果没有形成新的 stacking context，那么在进行层叠顺序的比较时该元素等价于它所在的 stacking context 的层叠顺序。</li><li>普通文本流中的元素，dom位置在后面的层叠顺序更高</li></ul></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context" target="_blank" rel="noreferrer">什么情况会创建新的 stacking context？</a> 如果元素没有创建新的 stacking context 设置 z-index 无效。</p></li><li><p>参考 <a href="https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/?shrink=1" target="_blank" rel="noreferrer">深入理解CSS中的层叠上下文和层叠顺序</a><img src="'+e+`" alt="image-20210912205432926" style="zoom:50%;"></p></li></ul><h1 id="scale" tabindex="-1">scale <a class="header-anchor" href="#scale" aria-label="Permalink to &quot;scale&quot;">​</a></h1><p><a href="https://jsfiddle.net/t5utds44/7" target="_blank" rel="noreferrer">清除多余空白</a></p><ul><li>负margin 抵消多余的空白</li></ul><h1 id="css-目录计数" tabindex="-1">css 目录计数 <a class="header-anchor" href="#css-目录计数" aria-label="Permalink to &quot;css 目录计数&quot;">​</a></h1><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">zl_parse_t</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">h1</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">before</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">counter-increment</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> h1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">counter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">h1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">. </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="文本截断" tabindex="-1">文本截断 <a class="header-anchor" href="#文本截断" aria-label="Permalink to &quot;文本截断&quot;">​</a></h1><ul><li><a href="https://blog.csdn.net/Tracy_frog/article/details/77881808" target="_blank" rel="noreferrer">文本强制两行超出就显示省略号</a><a href="https://www.html.cn/archives/5206" target="_blank" rel="noreferrer">多行文本溢出显示省略号-WEB前端开发</a><a href="https://mp.weixin.qq.com/s/GPQYKF-2wfBltrgziYTuRA" target="_blank" rel="noreferrer">2018年面试材料</a><a href="https://mp.weixin.qq.com/s/QT1oyc-AUIqx_tOb8J6n-A" target="_blank" rel="noreferrer">纯 CSS 实现多行文字截断</a></li><li><a href="https://www.zhangxinxu.com/wordpress/2009/09/%E5%85%B3%E4%BA%8E%E6%96%87%E5%AD%97%E5%86%85%E5%AE%B9%E6%BA%A2%E5%87%BA%E7%94%A8%E7%82%B9%E7%82%B9%E7%82%B9-%E7%9C%81%E7%95%A5%E5%8F%B7%E8%A1%A8%E7%A4%BA/#zxx_f" target="_blank" rel="noreferrer">关于文字内容溢出用点点点(…)省略号表示-张鑫旭</a><a href="https://cloud.tencent.com/developer/information/js%E5%88%A4%E6%96%AD%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA" target="_blank" rel="noreferrer">js判断文本溢出_js判断div文本是否溢出 - 云+社区 - 腾讯云</a></li></ul><h1 id="命名空间" tabindex="-1">命名空间 <a class="header-anchor" href="#命名空间" aria-label="Permalink to &quot;命名空间&quot;">​</a></h1><p>解决 css 类名冲突</p><ol><li>创建命名空间</li></ol><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 生成带命名空间的 className 字符串</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 支持对象类型和不限数量的 modifier，例如：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// const cls = createCls(&#39;namespace&#39;)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// cls(&#39;className&#39;)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// cls(&#39;className&#39;, &#39;modifier1&#39;, &#39;modifier2&#39;)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// cls(&#39;className&#39;, {&#39;modifier1&#39;: true, &#39;modifier2&#39;: false}, &#39;modifier3&#39;)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> createCls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">namespace</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">className</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;font-style:italic;">modifiers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">primitiveResult</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">namespace</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">className</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">modifierResult</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">modifiers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">makeObjectClassName</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">primitiveResult</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">primitiveResult</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">modifierResult</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> makeObjectClassName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">primitiveResult</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">modifier</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">modifier</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">primitiveResult</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">--</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">modifier</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">keys</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">modifier</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">k</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">modifier</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">k</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">keys</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">m</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">primitiveResult</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">--</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ol start="2"><li>使用</li></ol><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// 可以用组件名或页面的名字作命名空间</span></span>
<span class="line"><span style="color:#A6ACCD;">// createCls 可以直接挂到 vue 原型链上</span></span>
<span class="line"><span style="color:#A6ACCD;">const cls = createCls(&#39;checkbox&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">// checkbox 组件模板</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cls(&#39;wrap&#39;)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cls(&#39;input&#39;, {focus: true})</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* 这个组件的所有样式都写在这个类名下面 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">checkbox</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    &amp;-wrap{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    &amp;-input</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    &amp;-input--focus</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h1 id="宽高等比例缩放" tabindex="-1">宽高等比例缩放 <a class="header-anchor" href="#宽高等比例缩放" aria-label="Permalink to &quot;宽高等比例缩放&quot;">​</a></h1><p>高度与宽度相关联，当 padding-top 的值是百分比时，是根据父元素的宽度来计算的（margin-top 也是）。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">placeholder</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">占位, 撑开高度</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">.container {</span></span>
<span class="line"><span style="color:#A6ACCD;">  width: 50%</span></span>
<span class="line"><span style="color:#A6ACCD;">	.placeholder {</span></span>
<span class="line"><span style="color:#A6ACCD;">    width: 100%;</span></span>
<span class="line"><span style="color:#A6ACCD;">    height: 0;</span></span>
<span class="line"><span style="color:#A6ACCD;">    padding-top: 100%;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h1 id="link-和-script-js-的区别" tabindex="-1"><code>&lt;link&gt;</code> 和 <code>&lt;script&gt;</code> js 的区别 <a class="header-anchor" href="#link-和-script-js-的区别" aria-label="Permalink to &quot;\`&lt;link&gt;\` 和 \`&lt;script&gt;\` js 的区别&quot;">​</a></h1><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/assets/js/app.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">preload</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">as</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">script</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/assets/js/app.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>link 预加载资源，但是不会执行js，script 会执行js</p><h1 id="css-生成器" tabindex="-1">CSS 生成器 <a class="header-anchor" href="#css-生成器" aria-label="Permalink to &quot;CSS 生成器&quot;">​</a></h1><ul><li><a href="http://tool.uis.cc/sjmaker/" target="_blank" rel="noreferrer">三角形生成器</a></li><li><a href="https://cssgrid-generator.netlify.app/" target="_blank" rel="noreferrer">网格生成器</a></li><li><a href="https://enjoycss.com/" target="_blank" rel="noreferrer">在线CSS编辑-EnjoyCSS</a></li><li><a href="https://shadows.brumm.af/" target="_blank" rel="noreferrer">平滑阴影</a></li><li><a href="https://cssgradient.io/" target="_blank" rel="noreferrer">CSS渐变</a></li><li><a href="https://9elements.github.io/fancy-border-radius/" target="_blank" rel="noreferrer">花式边界半径</a></li><li><a href="https://bennettfeely.com/clippy/" target="_blank" rel="noreferrer">剪辑路径生成器</a></li><li><a href="https://neumorphism.io/#e0e0e0" target="_blank" rel="noreferrer">更改图像</a></li><li><a href="https://htmlcssfreebies.com/box-shadow-generator-multiple/" target="_blank" rel="noreferrer">多盒阴影生成器</a></li><li><a href="https://getwaves.io/" target="_blank" rel="noreferrer">SVG波浪</a></li><li><a href="https://angrytools.com/css/animation/" target="_blank" rel="noreferrer">动画</a> <a href="https://segmentfault.com/a/1190000023471689" target="_blank" rel="noreferrer">动画库</a></li></ul>`,38),r=[t];function c(i,y,D,F,C,d){return a(),n("div",null,r)}const f=s(p,[["render",c]]);export{h as __pageData,f as default};
