import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.cbe154cb.js";const e="/assets/1537458755805.cde36905.png",o="/assets/1537458411252.5794a7f1.png",t="/assets/1537458537311.d7623743.png",p="/assets/1530693415072.b6008199.png",r="/assets/1537458638731.9ce96c80.png",c="/assets/1537452622954.4273b1f0.png",i="/assets/1537452641694.cff01051.png",y="/assets/订阅发布，观察者.a81c61b8.png",f=JSON.parse('{"title":"nuxt.js(SSR Server Site Render)","description":"","frontmatter":{},"headers":[],"relativePath":"Vue/服务端渲染.md","filePath":"Vue/服务端渲染.md"}'),u={name:"Vue/服务端渲染.md"},D=l('<blockquote><p><a href="https://www.nuxtjs.cn/guide/installation" target="_blank" rel="noreferrer">NuxtJS中文网</a></p><p><a href="https://nuxtjs.org/docs/get-started/installation" target="_blank" rel="noreferrer">NuxtJs</a></p><p>掘金: Vue + Nuxt</p><p><a href="https://ssr.vuejs.org/#what-is-server-side-rendering-ssr" target="_blank" rel="noreferrer">vue ssr</a></p><ul><li><code>vue-server-renderer</code> 依赖一些 Node.js 原生模块，因此只能在 Node.js 中使用。</li></ul><p><a href="https://gitlab.com/gadelkareem/skeleton" target="_blank" rel="noreferrer">golang + nuxt</a></p></blockquote><h1 id="nuxt-js-ssr-server-site-render" tabindex="-1">nuxt.js(SSR Server Site Render) <a class="header-anchor" href="#nuxt-js-ssr-server-site-render" aria-label="Permalink to &quot;nuxt.js(SSR Server Site Render)&quot;">​</a></h1><ul><li><p>服务端渲染: 根据请求的URL ，动态的将模板与数据结合，并响应给客户端</p></li><li><p>简而言之，Nuxt.js是帮助Vue.js轻松完成服务端渲染工作的框架。Nuxt.js预设了服务端渲染所需要的各种配置，如异步数据，中间件，路由。</p></li><li><p>三大框架全家桶中的一部分（服务端渲染）它好比是 <a href="https://universal.angular.io/" target="_blank" rel="noreferrer">Angular Universal</a> 之于 <a href="https://angular.io/" target="_blank" rel="noreferrer">Angular</a>， <a href="https://zeit.co/blog/next2" target="_blank" rel="noreferrer">Next.js</a> 之于 <a href="https://facebook.github.io/react/" target="_blank" rel="noreferrer">React</a>。Vue的SSR是 nuxt</p></li><li><p>解决SEO的问题 , 当百度搜索引擎爬虫爬取的时候 通过URL 产生对服务器的请求，服务器根据URL，响应页面，因此百度就获取到了我们站点的数据</p></li><li><p>前言：nuxt 前端路由沿用了history模式，通过history.pushState 更改url，进而局部渲染组件</p></li><li><p>而首屏刷新的时候，通过后端计算并模板渲染，再将html相应给客户端，一定程度解决了首屏白屏的问题</p></li></ul><img src="'+e+`" alt="1537458755805" style="zoom:50%;"><blockquote><p>渲染方式</p></blockquote><ul><li>刷新，地址栏回车=&gt; URL改变，服务端渲染</li><li>点击nuxt-link组件，点击a标签，禁止a标签的页面跳转，并根据其href属性，通过history.pushState改变地址栏，并发起请求或者具体的客户端渲染行为，局部替换内容</li></ul><h1 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h1><blockquote><p>目录</p></blockquote><ul><li>pages 必须有，这个目录包含了你的应用程序视图和路由。Nuxt会读取这个目录下的所有*.vue文件并自动设置Vue Router。</li><li>layouts：配置页面布局，指定某个页面用某个布局</li></ul><blockquote><p>pages 特殊属性和功能</p></blockquote><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">export default {</span></span>
<span class="line"><span style="color:#A6ACCD;">  head() {</span></span>
<span class="line"><span style="color:#A6ACCD;">		// set meta tags for this page</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">	asyncData() {</span></span>
<span class="line"><span style="color:#A6ACCD;">	  // </span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><blockquote><p><code>context</code> 对象</p></blockquote><p><code>context</code> 在特定的Nuxt函数中可用，如asyncData、插件、中间件和nuxtServerInit。它为应用程序提供了关于当前请求的额外且通常是可选的信息。</p><blockquote><p>钩子</p></blockquote><ul><li>onNuxtReady</li></ul><blockquote><p><a href="https://nuxtjs.org/docs/concepts/server-side-rendering" target="_blank" rel="noreferrer">服务端渲染原理</a></p></blockquote><p>当浏览器发送初始请求时，它将击中Node.js的内部服务器。Nuxt会生成HTML，并将其与执行的函数（如asyncData、nuxtServerInit或fetch）的结果一起发回给浏览器。Hooks函数也会被执行。</p><h1 id="实践" tabindex="-1">实践 <a class="header-anchor" href="#实践" aria-label="Permalink to &quot;实践&quot;">​</a></h1><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">? Project name: nuxt-demo</span></span>
<span class="line"><span style="color:#A6ACCD;">? Programming language: JavaScript</span></span>
<span class="line"><span style="color:#A6ACCD;">? Package manager: Npm</span></span>
<span class="line"><span style="color:#A6ACCD;">? UI framework: None</span></span>
<span class="line"><span style="color:#A6ACCD;">? Nuxt.js modules: Axios - Promise based HTTP client</span></span>
<span class="line"><span style="color:#A6ACCD;">? Linting tools: ESLint, Prettier</span></span>
<span class="line"><span style="color:#A6ACCD;">? Testing framework: None</span></span>
<span class="line"><span style="color:#A6ACCD;">? Rendering mode: Universal (SSR / SSG)</span></span>
<span class="line"><span style="color:#A6ACCD;">? Deployment target: Server (Node.js hosting)</span></span>
<span class="line"><span style="color:#A6ACCD;">? Development tools: jsconfig.json (Recommended for VS Code if you&#39;re not using typ</span></span>
<span class="line"><span style="color:#A6ACCD;">escript), Semantic Pull Requests</span></span>
<span class="line"><span style="color:#A6ACCD;">? Continuous integration: None</span></span>
<span class="line"><span style="color:#A6ACCD;">? Version control system: Git</span></span></code></pre></div><h1 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h1><img src="`+o+'" alt="1537458411252" style="zoom:50%;"><h1 id="运行流程" tabindex="-1">运行流程 <a class="header-anchor" href="#运行流程" aria-label="Permalink to &quot;运行流程&quot;">​</a></h1><img src="'+t+'" alt="1537458537311" style="zoom:50%;"><h1 id="脚手架" tabindex="-1">脚手架 <a class="header-anchor" href="#脚手架" aria-label="Permalink to &quot;脚手架&quot;">​</a></h1><ul><li><code> vue init nuxt-community/starter-template &lt;project-name&gt;</code></li></ul><h1 id="整体预览" tabindex="-1">整体预览 <a class="header-anchor" href="#整体预览" aria-label="Permalink to &quot;整体预览&quot;">​</a></h1><ul><li><strong>vue前端渲染照旧(history)</strong></li><li>后端渲染补充 <ul><li>asyncData(context): 函数需要return {} ； 该数据会与组件内的data结合，在后端渲染组件前被调用</li><li>fetch(context): 在组件被创建前调用，用来同步Vuex内store数据</li><li>context属性 <img src="'+p+`" alt="1530693415072" style="zoom:50%;"></li></ul></li></ul><h1 id="便捷使用axios" tabindex="-1">便捷使用axios <a class="header-anchor" href="#便捷使用axios" aria-label="Permalink to &quot;便捷使用axios&quot;">​</a></h1><ul><li><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">​</a></h2><div class="language-cmd"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;"> npm i </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">S @nuxtjs/axios @nuxtjs/proxy</span></span></code></pre></div><h2 id="nuxt-config-js" tabindex="-1">Nuxt.config.js <a class="header-anchor" href="#nuxt-config-js" aria-label="Permalink to &quot;Nuxt.config.js&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">modules</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@nuxtjs/axios</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@nuxtjs/proxy</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">proxy</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">    [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api/dog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> target</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://dog.ceo/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> pathRewrite</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">^/api/dog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api/breeds/image/random</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="use-axios" tabindex="-1">Use Axios <a class="header-anchor" href="#use-axios" aria-label="Permalink to &quot;Use Axios&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 服务端</span></span>
<span class="line"><span style="color:#A6ACCD;">async </span><span style="color:#82AAFF;">asyncData</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ip</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$get</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://icanhazip.com</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ip</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 客户端</span></span>
<span class="line"><span style="color:#82AAFF;">created</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ul><h1 id="关于部署" tabindex="-1">关于部署 <a class="header-anchor" href="#关于部署" aria-label="Permalink to &quot;关于部署&quot;">​</a></h1><p><img src="`+r+'" alt="1537458638731"></p><ul><li><ol><li><code>npm run build </code></li><li><code>cd .nuxt/dist</code></li><li>配置package.json文件 scripts ,添加一项 <code>start-spa: &quot;nuxt start --spa&quot;</code></li><li>服务端渲染: <code>npm run start</code> (run可以省略)</li><li>单页应用: <code>npm run start-spa</code></li></ol></li></ul><h1 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h1><img src="'+c+'" alt="1537452622954" style="zoom:50%;"><ul><li>有动态参数的 在组件中使用 { params } 获去</li></ul><p><img src="'+i+'" alt="1537452641694"></p><img src="'+y+'" alt="订阅发布，观察者" style="zoom:50%;">',37),F=[D];function d(h,g,m,C,A,x){return a(),n("div",null,F)}const _=s(u,[["render",d]]);export{f as __pageData,_ as default};
