import{_ as s,o as a,c as l,V as n}from"./chunks/framework.35aa2305.js";const o="/assets/image-20200802202322310.2483ee53.png",d=JSON.parse('{"title":"移动端适配","description":"","frontmatter":{},"headers":[],"relativePath":"前端/HTML-CSS/CSS基础.md","filePath":"前端/HTML-CSS/CSS基础.md","lastUpdated":1691037194000}'),p={name:"前端/HTML-CSS/CSS基础.md"},e=n(`<h1 id="移动端适配" tabindex="-1">移动端适配 <a class="header-anchor" href="#移动端适配" aria-label="Permalink to &quot;移动端适配&quot;">​</a></h1><p>布局的基础+基本的PC端布局+移动端适配</p><ul><li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NTEwMTAwNg==&amp;mid=2650216321&amp;idx=2&amp;sn=58a93b8805c4a60379543ea53d21ca1b&amp;chksm=befe17a089899eb6c4983fb990778feea3c3abe61f500481b71358b295c0190d94e72983845a&amp;scene=0&amp;xtrack=1&amp;key=5344cfa6bb5e8fd1fa6ad4542d2e7a57a5b9cf6e3ee918bea6abe13f0d0a9816f13bc6e087cafd792eb37a8fa2e3d5391f7efd085edc27b5886da4aafa3dccab8a580f3ba70ad2fc825bb6854c5808af&amp;ascene=1&amp;uin=Mjc2NDI1NDU2NA%3D%3D&amp;devicetype=Windows+7&amp;version=62060833&amp;lang=zh_CN&amp;pass_ticket=7SxYUoJzta5TNU5RVI%2BjHbbnce3fxtDzNEpJeH1sJL9HgWwKpR7%2BkDY9DiLljFpv" target="_blank" rel="noreferrer">移动端适配-segmentFault</a></p></li><li><p><a href="https://aotu.io/notes/2017/04/28/2017-4-28-CSS-viewport-units/index.html" target="_blank" rel="noreferrer">利用 vw 实现适配布局-凹凸实验室</a></p></li></ul><blockquote><p>vue 项目使用 vw</p></blockquote><p>postcss-aspect-ratio-mini</p><p>postcss-px-to-viewport</p><ol><li>安装插件</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">–save</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">postcss-aspect-ratio-mini</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">postcss-px-to-viewport</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">postcss-write-svg</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">postcss-cssnext</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">postcss-viewport-units</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">cssnano</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">cssnano-preset-advanced</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">postcss-import</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">postcss-url</span></span></code></pre></div><ol start="2"><li>配置 .postcssrc.js</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// to edit target browsers: use &quot;browserlist&quot; field in package.json</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">autoprefixer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">postcss-import</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">postcss-url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">postcss-aspect-ratio-mini</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">postcss-write-svg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">utf8</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">postcss-cssnext</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">postcss-px-to-viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">viewportWidth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">750</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// 视窗的宽度，对应的是我们设计稿的宽度，一般是750</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">viewportHeight</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1334</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// 视窗的高度，根据750设备的宽度来指定，一般指定1334，也可以不配置</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">unitPrecision</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">// 指定\`px\`转换为视窗单位值的小数位数（很多时候无法整除）</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">viewportUnit</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vw</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// 指定需要转换成的视窗单位，建议使用vw</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">selectorBlackList</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.ignore</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.hairlines</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 指定不转换为视窗单位的类，可以自定义，可以无限添加,建议定义一至两个通用的类名</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">minPixelValue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// 小于或等于\`1px\`不转换为视窗单位，你也可以设置为你想要的值</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">mediaQuery</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// 允许在媒体查询中转换\`px\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">postcss-viewport-units</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">cssnano</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">preset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">advanced</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">autoprefixer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">postcss-zindex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>如果需要某些元素不使用vw单位，可以设置配置文件中的selectorBlackList里面的类名，该属性可无限添加，随便自定义，不需要转换的单位需要写在该类名上才可生效；</p><h1 id="媒体查询" tabindex="-1">媒体查询 <a class="header-anchor" href="#媒体查询" aria-label="Permalink to &quot;媒体查询&quot;">​</a></h1><ul><li>媒体类型</li></ul><ol><li>screen：彩色计算机</li><li>print</li><li>projection</li><li>all：所有媒体(默认)</li></ol><ul><li>在<code>&lt;link&gt;</code>链接外部样式表时可以指定媒体类型，<code>&lt;link media&gt;</code></li></ul><h1 id="a-伪类顺序" tabindex="-1"><code>&lt;a&gt;</code> 伪类顺序 <a class="header-anchor" href="#a-伪类顺序" aria-label="Permalink to &quot;\`&lt;a&gt;\` 伪类顺序&quot;">​</a></h1><ul><li>link--visited--focus--hover--active</li><li>active必须在hover后面，hover必须在link和visited后面；</li></ul><h1 id="css模块化" tabindex="-1">CSS模块化 <a class="header-anchor" href="#css模块化" aria-label="Permalink to &quot;CSS模块化&quot;">​</a></h1><h2 id="模块化解决方案" tabindex="-1">模块化解决方案 <a class="header-anchor" href="#模块化解决方案" aria-label="Permalink to &quot;模块化解决方案&quot;">​</a></h2><ol><li><p>一类是彻底抛弃 CSS，使用 JS 或 JSON 来写样式。<a href="https://github.com/FormidableLabs/radium" target="_blank" rel="noreferrer">Radium</a>，<a href="https://github.com/petehunt/jsxstyle" target="_blank" rel="noreferrer">jsxstyle</a>，<u>react-style</u> 属于这一类。优点是能给 CSS 提供 JS 同样强大的模块化能力；缺点是不能利用成熟的 CSS 预处理器（或后处理器）。</p></li><li><p>另一类是依旧使用 CSS，但使用 JS 来管理样式依赖（需要构建工具支持），代表是 <a href="https://github.com/css-modules/css-modules" target="_blank" rel="noreferrer">CSS Modules</a>。CSS Modules 能最大化地结合现有 CSS 生态和 JS 模块化能力，发布时依旧编译出单独的 JS 和 CSS。它并不依赖于 React，只要你使用 Webpack，可以在 Vue/Angular/jQuery 中使用。</p></li></ol><ul><li>CSS modules？</li></ul><p><strong><code>&lt;style module&gt;</code></strong></p><ul><li>BEM策略：Block-Element-Modifier</li></ul><p>类命名策略：类名按 块-元素-修饰符 命名</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">c-Button</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">c-Button--close</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    // ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h1 id="em-rem" tabindex="-1">em, rem <a class="header-anchor" href="#em-rem" aria-label="Permalink to &quot;em, rem&quot;">​</a></h1><ul><li>2em：相对于当前元素的字体 大小，当前元素中小写字母M的宽度的2倍</li><li>rem：相对于根元素(html中的<code>&lt;html&gt;</code>，也可以用伪元素::root表示根元素 )</li></ul><h1 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h1><ul><li>css中的变量相当与宏，作用只是将一个值替换为另一个值</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">html</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/*自定义变量*/</span></span>
<span class="line"><span style="color:#A6ACCD;">  --base-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --base-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--base-color</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="import" tabindex="-1">@import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;@import&quot;">​</a></h1><ul><li>@import导入的样式表A相当于被导入的样式表中的额样式规则出现在@import的位置</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*相当于在此处定义样式规则*/</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">common.css</span><span style="color:#89DDFF;">);</span></span></code></pre></div><ul><li>页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载；</li><li>如果你想样式表并行载入，以使页面更快，请使用LINK 替代<code>@import</code>。</li></ul><h1 id="清除浮动" tabindex="-1">清除浮动 <a class="header-anchor" href="#清除浮动" aria-label="Permalink to &quot;清除浮动&quot;">​</a></h1><ol><li>浮动元素的后面一个元素设置 clear: both (也可以添加一个空元素用来添加该属性)；</li><li>给浮动元素的容器元素设置 overflow:hidden 或 auto；</li><li>::after 伪元素；</li></ol><h1 id="视觉上清除一个元素" tabindex="-1">视觉上清除一个元素 <a class="header-anchor" href="#视觉上清除一个元素" aria-label="Permalink to &quot;视觉上清除一个元素&quot;">​</a></h1><ul><li><p><code>opacity:0;</code> <code>visibility: hidden;</code> <code>display:none;</code> <code>index: 99</code></p><ul><li><code>display</code> 影响布局，会导致回流，不会占据空间；<code>visibility</code> 和 <code>opacity</code> 会占据空间，不会导致回流。</li><li>只有 <code>opacity</code> 能触发点击事件。</li><li>父元素设置 <code>display</code> 和 <code>opacity</code> ，子元素一定会隐藏；父元素设置 <code>visibility</code> ，子元素 <code>visibility: visible</code> 子元素可以显示。</li></ul></li><li><p>回流 &amp; 重绘</p><ul><li><code>display</code> 导致回流， <code>visibility</code> 导致重绘</li><li>在一般情况下，<code>opacity</code> 会触发重绘，即 <code>Recalculate style</code> =&gt; <code>Update Layer Tree</code>。不管你是否开启GPU提升为合成层与否。 如果利用 <code>animation</code> 动画，对 <code>opacity</code> 做变化（<code>animation</code> 会默认触发GPU加速），则只会触发 GPU 层面的 composite，不会触发重绘。</li></ul></li></ul><p><a href="https://segmentfault.com/a/1190000015116392" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000015116392</a></p><h1 id="元素垂直居中" tabindex="-1">元素垂直居中 <a class="header-anchor" href="#元素垂直居中" aria-label="Permalink to &quot;元素垂直居中&quot;">​</a></h1><ol><li>父元素display:flex,align-items:center;</li><li>元素绝对定位，top:50%，margin-top：-（高度/2）</li><li>高度不确定用transform：translateY（-50%）</li><li>父元素table布局，子元素设置vertical-align:center;</li></ol><h2 id="水平对齐" tabindex="-1">水平对齐 <a class="header-anchor" href="#水平对齐" aria-label="Permalink to &quot;水平对齐&quot;">​</a></h2><ul><li><p>对齐块级元素：<code>margin:0 auto;</code> (宽度固定或者取百分比都可以)</p></li><li><p>块级元素中的行内元素</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box-contain</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">text-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box-contain</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inline-block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="垂直对齐" tabindex="-1">垂直对齐 <a class="header-anchor" href="#垂直对齐" aria-label="Permalink to &quot;垂直对齐&quot;">​</a></h2><ul><li>作用于行内元素</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">inline-ele</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">vertical-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> middle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">// 作用于 内联元素上</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// 容器元素设置 </span><span style="color:#FFCB6B;">line-height</span><span style="color:#A6ACCD;"> 为容器高度，</span><span style="color:#FFCB6B;">line-height</span><span style="color:#A6ACCD;"> 平均分配给行内框的上、下</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">800px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="未知宽高的水平垂直居中" tabindex="-1">未知宽高的水平垂直居中 <a class="header-anchor" href="#未知宽高的水平垂直居中" aria-label="Permalink to &quot;未知宽高的水平垂直居中&quot;">​</a></h2><ul><li>demo</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 1. 绝对定位 + translate */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">transform</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 2. flex布局*/</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">flex</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">//使子项目水平居中</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">		//使子项目垂直居中</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 3. table*/</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">table</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> table-cell</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">vertical-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> middle</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> //使子元素垂直居中</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">text-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">     //使子元素水平居中</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 4. inline-block*/</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inline-block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">text-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">    // 只有一行 &amp; 强制换行时无效</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="图像居中" tabindex="-1">图像居中 <a class="header-anchor" href="#图像居中" aria-label="Permalink to &quot;图像居中&quot;">​</a></h2><ol><li>父元素固定宽高，利用定位及设置子元素margin值为自身的一半；</li><li>父元素固定宽高，子元素设置position: absolute，margin：auto平均分配margin；</li><li>css3属性transform。子元素设置position: absolute; left: 50%; top: 50%;transform: translate(-50%,-50%);即可；</li><li>将父元素设置成display: table, 子元素设置为单元格 display: table-cell；</li><li>弹性布局display: flex。设置align-items: center; justify-content: center；</li></ol><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NTEwMTAwNg==&amp;mid=2650215660&amp;idx=1&amp;sn=c1aeb94de8a3a4e23402068390cc811f&amp;chksm=befe14cd89899ddbe29f3dd00212d6678af94606ee72ca0c54206d5e643cc0c684e64db44aa2&amp;scene=0&amp;key=f488c6fef5eafe9dddbfc3b904090949bf299ed3bba6ade392c7cdbda3053dfbb67d3c43bd13c69ff70503e95574b5574984ab793f52d9a8b00940664c531d3419d5a84018461bb07e019315e14adf33&amp;ascene=1&amp;uin=Mjc2NDI1NDU2NA%3D%3D&amp;devicetype=Windows+7&amp;version=62060720&amp;lang=zh_CN&amp;pass_ticket=Pn9cJyIWK2xt%2BmQltkMddf4S5oGoplFdiJ%2B16Yj6gD8L9Zd0WMlQ1u32%2FRJtZE1p" target="_blank" rel="noreferrer">CSS 垂直居中</a></li></ul><h1 id="flex布局" tabindex="-1">Flex布局 <a class="header-anchor" href="#flex布局" aria-label="Permalink to &quot;Flex布局&quot;">​</a></h1><p>flex 布局分为三点：flex 容器、flex直系子元素的伸缩、flex子元素的对齐；</p><ul><li><p>flex 容器属性设置：flex-direction、flex-wrap、justify-content、align-items</p></li><li><p>flex 元素的对齐</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// 全部item在主轴的对齐方式</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-contain</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">// 全部item在副轴的对齐方式</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-contain</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// 多行时多个主轴的对齐方式</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-contain</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// 单个item在副轴的对齐方式</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-self</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-end</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>flex 属性简写</li></ul><ol><li><code>flex: auto</code>：1 1 auto</li><li><code>flex: 2</code>：2 1 0%</li></ol><h1 id="外边距塌陷-折叠" tabindex="-1"><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing" target="_blank" rel="noreferrer">外边距塌陷（折叠）</a> <a class="header-anchor" href="#外边距塌陷-折叠" aria-label="Permalink to &quot;[外边距塌陷（折叠）](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing)&quot;">​</a></h1><p><strong>上下相邻的两个块元素A,B，会合并共同的外边距</strong>。A的<strong>margin-botton</strong>: 20px; B的<strong>margin-top</strong>: 10px; B的margin-top属性无效，较大的margin-botton才有效。两个垂直外边距接触到一起(没有边框的隔离)时会发生外边距折叠，即使一个元素嵌套另一个元素也不例外。</p><p>浮动元素和绝对定位的元素不会发生边距折叠。</p><h1 id="img底像素空白" tabindex="-1">img底像素空白 <a class="header-anchor" href="#img底像素空白" aria-label="Permalink to &quot;img底像素空白&quot;">​</a></h1><ul><li><a href="https://zhuanlan.zhihu.com/p/56815107" target="_blank" rel="noreferrer">知乎</a></li></ul><h1 id="布局和包含块" tabindex="-1">布局和包含块 <a class="header-anchor" href="#布局和包含块" aria-label="Permalink to &quot;布局和包含块&quot;">​</a></h1><ul><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block" target="_blank" rel="noreferrer">布局和包含块-MDN</a></p></li><li><p>所有毗邻的两个或更多盒元素的margin将会合并为一个margin共享之。毗邻的定义为：同级或者嵌套的盒元素，并且它们之间没有非空内容、Padding或Border分隔。</p></li></ul><p><img src="`+o+`" alt="image-20200802202322310"></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">parent</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  display: table</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="视觉格式化模型" tabindex="-1">视觉格式化模型 <a class="header-anchor" href="#视觉格式化模型" aria-label="Permalink to &quot;视觉格式化模型&quot;">​</a></h1><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Visual_formatting_model" target="_blank" rel="noreferrer">视觉格式化模型</a></li></ul><h1 id="html5新特性" tabindex="-1">HTML5新特性 <a class="header-anchor" href="#html5新特性" aria-label="Permalink to &quot;HTML5新特性&quot;">​</a></h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/HTML5" target="_blank" rel="noreferrer">HTML5-MDN</a></p><h1 id="文本对齐缩进" tabindex="-1">文本对齐缩进 <a class="header-anchor" href="#文本对齐缩进" aria-label="Permalink to &quot;文本对齐缩进&quot;">​</a></h1><blockquote><p>text-indent</p></blockquote><blockquote><p>text-align</p></blockquote><ul><li>应用于块级元素，不控制块元素自身的对齐，控制其元素内容(行内内容: 文本、图像等)的对齐</li></ul><blockquote><p>line-height</p></blockquote><ul><li>设置行内元素的height和width无效，通过设置<code>line-height</code>调整高度</li></ul><blockquote><p>vertical-align</p></blockquote><ul><li>指定行内元素（<code>display:inline</code>，如 <code>&lt;img&gt;</code> <code>&lt;span&gt;</code>）或表格单元格（table-cell）元素的垂直对齐方式。</li><li>应用于块级容器中的行内元素的垂直对齐方式，设置行内元素的 vertical-align</li></ul>`,81),t=[e];function c(r,i,D,y,C,F){return a(),l("div",null,t)}const u=s(p,[["render",c]]);export{d as __pageData,u as default};
