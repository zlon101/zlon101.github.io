{"componentChunkName":"component---src-pages-index-jsx","path":"/","result":{"data":{"allMarkdownRemark":{"nodes":[{"id":"c8fb5922-2546-5048-a3f5-20e9407c8181","fields":{"articlePath":"/articles/Linux命令/"},"excerpt":"查找文件 find /xx -iname \"brew*\"\r\nhttps://www.jianshu.com/p/7a5851e1a900 which：查命令位置 whereis：查环境变量内文件位置 mdfind -name \"name\"\r\nmdfind命令就是Spotlight…","parent":{"name":"Linux命令","mtime":"2023/03/09 08:10"}},{"id":"b416f56f-0106-5b96-8136-8ec1b1c5d2d4","fields":{"articlePath":"/articles/Git/"},"excerpt":"Git官网 国外网友制作的Git Cheat Sheet Git骚操作 团队合作必备的 Git 操作 git <command> [options] [arguments] []: 可选 <>:  必选 {}:  单选  pull rebase git rebase git…","parent":{"name":"Git","mtime":"2023/03/08 03:39"}},{"id":"a9c33a5a-5fa7-58cc-9ebf-c2b4a554bd93","fields":{"articlePath":"/articles/TS基础/"},"excerpt":"如何定义一个类型，或得到一个类型？ keyof 后面跟一个类型，获取该类型的所有 key，产生联合类型。\r\ntypeof 后面跟一个变量，获取变量的类型。 类型别名 type 和 interface…","parent":{"name":"TS基础","mtime":"2023/03/08 03:39"}},{"id":"44e8fee1-261a-5762-8829-39ee5de4d100","fields":{"articlePath":"/articles/vue3/"},"excerpt":"TODO vue2 源码 vue3 源码 Vue3 响应式是如何实现的 vue 设计与实现 前端开发-霍春阳\r\n vue 动态创建组件 $mount('#app') 组件会替换 #app  元素本身（outerHtml） 关键字\r\n顶级作用域 新特性 template…","parent":{"name":"vue3","mtime":"2023/03/09 08:10"}},{"id":"d0cb9d0a-4838-5323-9e2e-c3203fcdf985","fields":{"articlePath":"/articles/WebRTC/"},"excerpt":"参考 深入浅出音视频与 WebRTC","parent":{"name":"WebRTC","mtime":"2023/03/09 08:10"}},{"id":"95af9b78-a56a-5d35-a1c4-14b67b710eef","fields":{"articlePath":"/articles/微前端/"},"excerpt":"微前端解决方案 微前端定义：Techniques, strategies and recipes for building a modern web app with multiple teams using different JavaScript frameworks…","parent":{"name":"微前端","mtime":"2023/03/08 03:39"}},{"id":"ebedf513-f0a0-50f0-bcf8-5699bf3f1616","fields":{"articlePath":"/articles/爬虫/"},"excerpt":"无头浏览器 Puppeteer : 控制 Chrome 或 Chromium 的 Node 库 Puppeteer 初探-示例 API 注意 page.screenshot 异步执行，如果在执行截屏之前浏览器已经 close 会报错 参考 采集方案策略之App…","parent":{"name":"爬虫","mtime":"2023/03/09 08:10"}},{"id":"408f7506-f023-53cc-868d-ed76d0424415","fields":{"articlePath":"/articles/博客/Gatsby建站/"},"excerpt":"Gatsby是一个基于 React 架构的静态站点生成器，可以让你体验React的所有优点。Gatsby有一个预先配置好的Webpack，使用它入门React会省下很多麻烦，此外Gatsby会根据你的目录结构自动生成路由。所有的HTML…","parent":{"name":"Gatsby建站","mtime":"2023/03/08 03:39"}},{"id":"f4bf96a6-5bfd-576d-81b2-16dafe3ad13f","fields":{"articlePath":"/articles/Vue/PWA/"},"excerpt":"PWA （渐进式/Web/application） 只能在http://localhost或者https下运行 持续关注PWA，积极研究其中应用场景，谷歌公司将现有的技术，结合起来推广的一整套的方案 慢慢收服你（用户） 离线浏览web…","parent":{"name":"PWA","mtime":"2023/03/08 03:39"}},{"id":"3cb522b0-f9a3-5699-90b5-293c09f7ecc0","fields":{"articlePath":"/articles/博客/指南/"},"excerpt":"搭建博客 Github + jekyll-now Gatsby：面向内容的React静态网站框架 Next.js：使用Node构建服务端渲染的网站 SwiftUI-App引用程序的用户界面 静态站点生成器 静态站点生成器融合了服务端渲染（对于 SEO…","parent":{"name":"指南","mtime":"2023/03/08 03:39"}},{"id":"c0bd48b6-7633-5842-9f43-0463f8d18ac2","fields":{"articlePath":"/articles/Vue/vue2源码/"},"excerpt":"概念 关键词 | 核心概念 数据劫持 vue2 中通过 defineProperty 定义对象属性的 getter 和 setter 和重写数组的部分方法实现数据劫持，当数据被访问时进行依赖收集（订阅），当数据被修改时通知所有的订阅者更新 双向绑定 MVVM…","parent":{"name":"vue2源码","mtime":"2023/03/09 08:10"}},{"id":"9ef80637-0459-5dcf-a3ac-dd9fd8964812","fields":{"articlePath":"/articles/Vue/Vue技术栈/"},"excerpt":"Vue全家桶 vuex：状态管理 vue-router：路由 vue-resource & axios(通用)：http请求 vuelidate：表单验证 Vuex 1. 基本使用 2. 核心概念和原理     vuex底层实现 1. Vuex结构","parent":{"name":"Vue技术栈","mtime":"2023/03/08 03:39"}},{"id":"c4d59eda-1c2e-50a0-b712-9caf1b8ac8d8","fields":{"articlePath":"/articles/Vue/vue基础概念/"},"excerpt":"什么是字符串模板：单文件中的template 和 实例化vue对象时的template 属性。 DOM 模板：在 html 文件中编写的html标签(包含自定义标签)，直接在DOM中使用组件。 html 属性名和属性值 vue 实例属性：data、computed、methods…","parent":{"name":"vue基础概念","mtime":"2023/03/09 08:10"}},{"id":"8b984f9a-dbd5-5f51-a260-08a5e0d71ec7","fields":{"articlePath":"/articles/Vue/Vue视频资料/"},"excerpt":"v-for中key的作用 大家要知道，不仅只是vue中，react中在执行列表渲染时也会要求给每个组件添加key这个属性 如果想知道key的作用，不得我们得聊一下虚拟DOM的Diff算法 所谓虚拟DOM的诞生，使我们可以不直接操作DOM…","parent":{"name":"Vue视频资料","mtime":"2023/03/08 03:39"}},{"id":"03389365-beb5-5773-9499-451a7b96b04e","fields":{"articlePath":"/articles/Vue/服务端渲染/"},"excerpt":"NuxtJS中文网 NuxtJs 掘金: Vue + Nuxt vue ssr vue-server-renderer 依赖一些 Node.js 原生模块，因此只能在 Node.js 中使用。 golang + nuxt nuxt.js(SSR Server Site…","parent":{"name":"服务端渲染","mtime":"2023/03/08 03:39"}},{"id":"b82377e0-8f76-5dd4-be83-dd7d9d6e7a26","fields":{"articlePath":"/articles/React/React基础/"},"excerpt":"React 还可以使用 Node 进行服务器渲染，或使用 React Native 开发原生移动应用。\r\n虚拟DOM渲染成页面上的UI的几种场景： 通过react-dom在浏览器上渲染，react-dom将虚拟dom节点转换为浏览器的dom节点。 使用node…","parent":{"name":"React基础","mtime":"2023/03/08 03:39"}},{"id":"109930d3-dc1b-58da-83d7-f2710be8c3ad","fields":{"articlePath":"/articles/Vue/总结/"},"excerpt":"Vue编写风格 HTML元素的属性值始终带引号<input type='text'>;\r\n<AppSidebar :style={width:sidebarWidth+'px'}>也是可以的(HTML中没有空格的属性值可以不用引号包裹) Vue…","parent":{"name":"总结","mtime":"2023/03/09 08:10"}},{"id":"4da388cc-a30c-5e05-a476-f7661ecac91b","fields":{"articlePath":"/articles/React/React总结/"},"excerpt":"待解决 const ProfilePage = React.lazy(() => import('./ProfilePage')); // 懒加载 React哲学 将渲染UI和添加交互分开编写，视图和逻辑功能分开。 先写静态UI，UI完成后再添加逻辑。编写静态UI…","parent":{"name":"React总结","mtime":"2023/03/08 03:39"}},{"id":"69af3085-861e-5e4e-95cc-c2f57e8c3772","fields":{"articlePath":"/articles/React/React技术栈/"},"excerpt":"技术栈 React Router Redux Flux & Immutable （是什么?） React Native Middleware（中间件） reselect redux-thunk redux-sage styled-components react+redux…","parent":{"name":"React技术栈","mtime":"2023/03/08 03:39"}},{"id":"ba1dc2a7-59d7-5e69-8ef8-dc74eb86cc12","fields":{"articlePath":"/articles/前端/webView/"},"excerpt":"Hybrid App的本质，其实是在原生的 App 中，使用 WebView 作为容器直接承载 Web页面。因此，最核心的点就是 Native端 与 H5端 之间的双向通讯层，其实这里也可以理解为我们需要一套跨语言通讯方案，来完成 Native(Java/Objective-c…","parent":{"name":"webView","mtime":"2023/03/08 03:39"}}]}},"pageContext":{}},"staticQueryHashes":["3957182205"]}