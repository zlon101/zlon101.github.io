{"componentChunkName":"component---src-templates-post-js","path":"/articles/爬虫/","result":{"data":{"markdownRemark":{"fields":{"articlePath":"/articles/爬虫/"},"html":"<h1>无头浏览器</h1>\n<ul>\n<li>\n<p><a href=\"https://github.com/puppeteer/puppeteer/tree/v1.10.0\">Puppeteer</a> : 控制 Chrome 或 Chromium 的 Node 库</p>\n</li>\n<li>\n<p><a href=\"https://github.com/laispace/puppeteer-explore\">Puppeteer 初探-示例</a></p>\n</li>\n<li>\n<p>API</p>\n</li>\n</ul>\n<deckgo-highlight-code language=\"js\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">// 获取上下文句柄\r\nconst bodyHandle = await frame.$(&#39;body&#39;);\r\nconst html = await frame.evaluate(body =&gt; body.innerHTML, bodyHandle);\r\nawait bodyHandle.dispose();\r\n\r\nconst htmlHandle = await page.$(&#39;html&#39;);\r\nconst html = await page.evaluate(body =&gt; body.outerHTML, htmlHandle);\r\nawait htmlHandle.dispose();\r\n\r\n🔥🔥🔥\r\n\r\nconst bodyInnerHTML = await page.$eval(&#39;body&#39;, dom =&gt; dom.innerHTML);\r\n\r\n\r\n- page.evaluate: page context\r\n- page.evaluateHandle: page context,  page.evaluateHandle returns in-page object (JSHandle).\r\n- page.$eval:  browser context\r\n\r\n- page.mainFrame().$(selector)\r\n- executionContext.evaluateHandle:  in-page object (JSHandle)\r\n\r\n- Frame、JSHandle、ElementHandle 可以执行 executionContext</code>\n        </deckgo-highlight-code>\n<ul>\n<li><strong>注意</strong>\n<ul>\n<li>page.screenshot 异步执行，如果在执行截屏之前浏览器已经 <code>close</code> 会报错</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>参考</p>\n</blockquote>\n<p><a href=\"https://zhangslob.github.io/2017/12/23/%E9%87%87%E9%9B%86%E6%96%B9%E6%A1%88%E7%AD%96%E7%95%A5%E4%B9%8BApp%E6%8A%93%E5%8C%85/\">采集方案策略之App抓包</a>\r\n<a href=\"https://zhuanlan.zhihu.com/p/76237595\">结合项目来谈谈 Puppeteer</a>\r\n<a href=\"https://github.com/SeleniumHQ/selenium/tree/trunk/javascript/node/selenium-webdriver#readme\">selenium-webdriver node库</a>\r\n<a href=\"https://www.browserstack.com/docs/automate/selenium/getting-started/nodejs#run-your-first-test\">Run Selenium tests with NodeJS | BrowserStack Docs</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1842915\">selenium-python</a></p>\n<h1>爬虫</h1>\n<p><a href=\"https://github.com/bda-research/node-crawler\">crawler</a></p>\n<p><a href=\"https://imweb.io/topic/5d230c6df7b5692b080f2668\">爬虫实践</a></p>\n<p><a href=\"https://github.com/wuyanwuyan/wechat-articles-crawler\">基于anyproxy的微信公众号文章爬取</a></p>\n<h1>微信公众号</h1>\n<p><a href=\"https://blog.csdn.net/geanwen/article/details/78733470?spm=1001.2101.3001.6650.13&#x26;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-78733470-blog-89485887.pc_relevant_antiscanv2&#x26;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-78733470-blog-89485887.pc_relevant_antiscanv2&#x26;utm_relevant_index=19\">简单内网映射到公网方法-公众开发-Sunny-Ngrok</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/268608520\">WxPush-知乎</a>\r\n<a href=\"https://wxpusher.zjiecode.com/docs/#/\">WxPush-文档</a>\r\n<a href=\"https://cloud.tencent.com/developer/article/1449326?from=15425\">python发送微信及企业微信消息</a>\r\n<a href=\"http://docs.wechatpy.org/zh_CN/stable/messages.html\">wechatpy 是一个微信 (WeChat) 的第三方 Python SDK, 实现了微信公众号、企业微信和微信支付等 API</a>\r\n<a href=\"https://wechatpy.readthedocs.io/zh_CN/stable/client/message.html\">wechatpy-自动消息接口</a></p>\n<h2>实践</h2>\n<ol>\n<li>ngrok 将本地IP+端口映射到一个公网域名上</li>\n<li>微信开发平台的URL填写上面的公网地址</li>\n</ol>\n<h1>企业微信</h1>\n<p><a href=\"https://www.cnblogs.com/37yan/p/15200868.html\">借助企业微信实现“调接口”给个人微信发消息</a>\r\n<a href=\"https://zhuanlan.zhihu.com/p/465307569\">https://zhuanlan.zhihu.com/p/465307569</a> WechatPush</p>\n<p>企业微信--自建应用\r\n自建应用和企业微信双向通信</p>\n<h2>实践 (成功)</h2>\n<blockquote>\n<p>只需要一个企业微信账号</p>\n<p>可以推送给某个人、所有人、某个部门</p>\n</blockquote>\n<ol>\n<li>注册企业微信（不用认证）</li>\n<li>在应用管理新建自建应用</li>\n<li>微信扫描 “企业微信-我的企业-微信插件-邀请关注 ” 中的二维码，这样微信就会收到企业微信的消息通知</li>\n<li>按照 “企业微信开发者中心-消息推送-<a href=\"https://developer.work.weixin.qq.com/document/path/90372#%E6%B6%88%E6%81%AF%E7%B1%BB%E5%9E%8B\">发送应用消息</a>” 文档中的步骤操作，可以直接在本地服务中调用接口推送消息到自建应用</li>\n<li>微信会收到来自企业微信的通知，通知效果和微信联系人发送消息的效果一样（微信首页和锁屏通知）</li>\n</ol>\n<h1>微信机器人</h1>\n<blockquote>\n<p>python中的wxpy、requests模块完成微信的基本操作</p>\n</blockquote>\n<p><a href=\"https://cloud.tencent.com/developer/article/1497693?from=15425\">https://cloud.tencent.com/developer/article/1497693?from=15425</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1702852?from=15425\">Python 微信机器人-向指定名称的好友发送微信消息</a></p>\n<blockquote>\n<p>itchat</p>\n</blockquote>\n<p><a href=\"https://cloud.tencent.com/developer/article/1449326?from=15425\">python发送微信及企业微信消息</a></p>\n<blockquote>\n<p>wechaty</p>\n</blockquote>\n<p><a href=\"https://juejin.cn/post/6992409675371118622\">https://juejin.cn/post/6992409675371118622</a></p>\n<h1>短信</h1>\n<p><a href=\"https://cloud.tencent.com/developer/article/1536769\">用Python每天自动给女朋友免费发短信-twilio</a>\r\n<a href=\"https://zhuanlan.zhihu.com/p/100664465\">用Python发免费短信的正确姿势-twilio</a>\r\n<a href=\"https://zhuanlan.zhihu.com/p/28903372\">简单介绍使用python发送短信的方式-Twiio</a></p>\n<h1>个人PC接入公网</h1>\n<ul>\n<li>动态域名解析 + 端口映射 （需要搞个域名）</li>\n<li>使用花生壳之类的内网穿透服务（简单无脑，网速、流量差）</li>\n</ul>\n<blockquote>\n<p><a href=\"https://natapp.cn/\">natapp</a></p>\n</blockquote>\n<p>基于ngrok的内网穿透工具，有了它你可以直接将自己的本机发布到公网。</p>\n<p>在网站上设置映射到本地的ip和端口</p>\n<p>本地跑natapp程序时，会提供公网访问的地址</p>\n<p>如 <a href=\"http://xxx.xx\">http://xxx.xx</a> --> 127.0.0.1:2888</p>\n<blockquote>\n<p><a href=\"https://www.ngrok.cc/\">ngrok</a></p>\n</blockquote>\n<p>Sunny-Ngrok（国内版）</p>\n<blockquote>\n<p><a href=\"https://github.com/fatedier/frp\">frp</a></p>\n<p>需要有公网IP</p>\n</blockquote>\n<p>通过在具有公网 IP 的节点上部署 frp 服务端，可以轻松地将内网服务穿透到公网\r\n搭配<a href=\"https://www.bt.cn/\">宝塔面板</a>弄了个简单的文件服务器</p>\n<blockquote>\n<p>宽带开启公网ip访问家里电脑-麻烦</p>\n</blockquote>\n<ul>\n<li>打电话给运营商要求开通公网ip</li>\n<li>把光猫改为桥接(需要光猫超级管理员密码)</li>\n<li>路由器改为拨号上网</li>\n<li>申请花生壳ddns,用来解析路由器动态ip</li>\n<li>路由器配置ddns</li>\n<li>路由器给需要公网访问的机器做端口映射(不能映射80,443)</li>\n</ul>\n<blockquote>\n<p>参考</p>\n</blockquote>\n<p><a href=\"https://www.youtube.com/watch?v=8J0Up8B7YkU\">软路由 桥接 端口转发 旁路由 单臂路由-视频</a></p>\n<h1>获取光猫超级管理员</h1>\n<p><a href=\"https://www.bilibili.com/video/BV1Zu411m72m?p=1&#x26;share_medium=android&#x26;share_plat=android&#x26;share_session_id=3fef62aa-9d43-4619-bd01-8d0dfa2baff8&#x26;share_source=COPY&#x26;share_tag=s_i&#x26;timestamp=1641364962&#x26;unique_k=M6VAnZz&#x26;vd_source=bd65c223ad05da7787aa7edaf82077eb\">视频</a></p>\n<p>然后打开网页控制台,选中u盘的目录元素,编辑网页元素, 将目录相关的字段改为\"..\", 然后就可以进入上一级目录了, 一直重复这个操作,进入根目录, 然后进入<code>/var/config</code>.将<code>lastgood.xml</code> 复制到u盘, 然后电脑打开u盘上的 <code>lastgood.xml</code>, 里面有一个<code>SUPER_PASSWORD</code>,就是超级管理员密码</p>","id":"ebedf513-f0a0-50f0-bcf8-5699bf3f1616","parent":{"name":"爬虫","base":"爬虫.md","mtime":"2023-03-09T08:10:00.407Z","sourceInstanceName":"markdown"}}},"pageContext":{"articlePath":"/articles/爬虫/"}},"staticQueryHashes":["3957182205"]}