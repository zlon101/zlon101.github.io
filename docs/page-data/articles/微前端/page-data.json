{"componentChunkName":"component---src-templates-post-js","path":"/articles/微前端/","result":{"data":{"markdownRemark":{"fields":{"articlePath":"/articles/微前端/"},"html":"<h4>微前端解决方案</h4>\n<blockquote>\n<p>微前端定义：Techniques, strategies and recipes for building a <strong>modern web app</strong> with <strong>multiple teams</strong> using <strong>different JavaScript frameworks</strong>. — <a href=\"https://micro-frontends.org/\">Micro Frontends</a> </p>\n<p>子项目独立部署运算</p>\n</blockquote>\n<ol>\n<li>single-spa：single-spa 是一个用于前端微服务化的JavaScript 前端解决方案(本身没有处理样式隔离， js 执行隔离) 实现了路由劫持和应用载入</li>\n<li>qiankun：基于Single-SPA, 提供了更加开箱即用的API （ single-spa + sandbox+ import-html-entry ） 做到了，技术栈无关、并且接入简单（像iframe 一样简单）</li>\n</ol>\n<p><a href=\"https://segmentfault.com/a/1190000040275586\">微前端解决方案</a>\n<a href=\"https://juejin.cn/post/6844904185910018062#heading-29\">qiankun 微前端方案实践及总结</a>\n<a href=\"https://juejin.cn/post/6844904162509979662\">微前端-最容易看懂的微前端知识</a>  </p>\n<p><a href=\"https://stackblitz.com/github/webpack/webpack.js.org/tree/master/examples/module-federation?file=README.md&#x26;terminal=start&#x26;terminal=\">Module Federation</a> </p>\n<h4><a href=\"https://www.npmjs.com/package/qiankun\">qiankun</a></h4>\n<blockquote>\n<ol>\n<li>一个子项目一个服务，不同服务端口不同，怎么解决跨域？</li>\n<li>资源会不会重复加载？</li>\n<li>路由动态配置？</li>\n<li>沙箱？JS、CSS隔离</li>\n</ol>\n</blockquote>\n<blockquote>\n<ul>\n<li>onGlobalStateChange</li>\n<li>setGlobalState</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>微应用暴露出的生命周期钩子，微应用需要提供生命周期钩子；</p>\n</blockquote>","id":"620189d1-1540-5c2d-bab8-096c4ce7b818","parent":{"__typename":"File","name":"微前端","base":"微前端.md","mtime":"2022-03-30T03:05:54.675Z","sourceInstanceName":"markdown"}}},"pageContext":{"articlePath":"/articles/微前端/"}},"staticQueryHashes":["3957182205"]}