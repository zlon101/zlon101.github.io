{"componentChunkName":"component---src-templates-post-js","path":"/articles/前端/JS/模块/","result":{"data":{"markdownRemark":{"fields":{"articlePath":"/articles/前端/JS/模块/"},"html":"<h4>CommonJs &#x26; AMD</h4>\n<p>ES6之前的模块加载方案有 CommonJs 和 AMD，前者用于服务器，后者用于浏览器环境；两者都在<strong>运行时</strong>确定模块的依赖关系；</p>\n<ul>\n<li>\n<p>CommonJS模块</p>\n<deckgo-highlight-code language=\"js\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">let { stat, exists, readFile } = require(&#39;fs&#39;);</code>\n        </deckgo-highlight-code>\n</li>\n<li>require 不会提升，requier 不会重复导入，<code>require</code> 命令第一次加载某个脚本的时候，就会<strong>执行整个脚本</strong>，然后在<strong>内存生成一个「对象」</strong>，此后如果继续 <code>require</code> 相同模块，也不会再次执行该模块，而是到<strong>缓存之中取出该对象</strong>（所以对象内部数据不会再因为被引用模块内部原因改变，相当于拿到的是运行结果的副本，ESModule 则相反）；也就是说，CommonJS 模块无论加载多少次，都<strong>只会在第一次加载时运行一次</strong>，以后再加载，就返回第一次运行的结果，除非<strong>手动清除系统缓存</strong>。</li>\n</ul>\n<h4>ES6 模块 import export</h4>\n<ul>\n<li>服务器及浏览器环境下的通用模块加载方案，<strong>编译时</strong>确定模块的依赖关系;</li>\n<li>import 命令会提升，import 命令需要知道模块中导出的变量名(函数名、对象名)；</li>\n<li>import 命令会执行所加载的模块，若有多条相同的 import 语句，则只执行一次；</li>\n<li>\n<p><strong>export</strong>\nexport 可以出现在模块的任何位置，只要不在块级代码内；</p>\n<deckgo-highlight-code language=\"js\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">// 写法一\nexport var m = 1;\n// 写法二\nvar m = 1;\nexport {m};</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p><strong>import</strong></p>\n<ol>\n<li>import有提升效果，因为import命令是在编译阶段完成的；</li>\n<li>export导出的模块，使用import导入时需要知道对应变量的名字，使用export default在导入时不需要知道变量的名字，并且不需要用大括号。</li>\n</ol>\n</li>\n<li>\n<p>创建中间模块</p>\n<deckgo-highlight-code language=\"js\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">// ManyComponents.js\nexport const MyComponent = /* ... */;\nexport const MyUnusedComponent = /* ... */;\n\n// MyComponent.js\nexport { MyComponent as default } from &quot;./ManyComponents.js&quot;;</code>\n        </deckgo-highlight-code>\n</li>\n</ul>\n<h4>参考</h4>\n<ul>\n<li><a href=\"https://blog.lbinin.com/frontEnd/JavaScript/Module-Import.html\">模块</a> </li>\n</ul>","id":"96d7f093-82b2-5751-b9d5-778ba847f9b8","parent":{"__typename":"File","name":"模块","base":"模块.md","mtime":"2022-03-30T03:12:22.865Z","sourceInstanceName":"markdown"}}},"pageContext":{"articlePath":"/articles/前端/JS/模块/"}},"staticQueryHashes":["3957182205"]}