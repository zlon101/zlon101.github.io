{"componentChunkName":"component---src-templates-post-js","path":"/articles/前端/前端工程化/打包工具/","result":{"data":{"markdownRemark":{"fields":{"articlePath":"/articles/前端/前端工程化/打包工具/"},"html":"<ul>\n<li>\n<p>.eslintignore</p>\n<ul>\n<li>**/cafe-directive</li>\n</ul>\n</li>\n<li>\n<p>package.json 配置 directories file unpkg</p>\n</li>\n<li>\n<p>npm pack</p>\n</li>\n</ul>\n<deckgo-highlight-code language=\"json\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">&quot;files&quot;: [\r\n    &quot;package.json&quot;,\r\n    &quot;es&quot;,\r\n    &quot;lib&quot;,\r\n    &quot;dist&quot;,\r\n    &quot;LICENSE&quot;,\r\n    &quot;README.md&quot;\r\n  ],</code>\n        </deckgo-highlight-code>\n<ul>\n<li>插件</li>\n</ul>\n<deckgo-highlight-code language=\"shell\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">npm github-markdown-css \r\nvue add style-resources-loader</code>\n        </deckgo-highlight-code>\n<hr>\n<blockquote>\n<p>目标</p>\n</blockquote>\n<ul>\n<li>入口</li>\n<li>输出</li>\n<li>输出格式：cmd、umd、es module</li>\n<li>图像资源</li>\n<li>全局样式</li>\n<li>svg生成iconfont字体图标\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000017480480\">webpack自动用svg生成iconfont字体图标，支持热重载</a></li>\n</ul>\n</li>\n<li>svg生成vue 组件</li>\n<li>webpack rollup <a href=\"https://webpack.docschina.org/guides/tree-shaking/\">Tree Shaking</a> sideEffects 打包库 esbuild</li>\n</ul>\n<h1>不同工具的区别</h1>\n<ul>\n<li>webpack 适合用于打包 app，rollup 适合用于打包库</li>\n</ul>\n<blockquote>\n<p>webpack 使用场景</p>\n</blockquote>\n<ul>\n<li>打包 app</li>\n<li>代码分隔、静态资源处理、CommonJS 依赖处理</li>\n</ul>\n<blockquote>\n<p>rollup</p>\n</blockquote>\n<ul>\n<li>ES2015 modules 代码</li>\n</ul>\n<h1>rollup</h1>\n<deckgo-highlight-code language=\"shell\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">npx rollup -c config.js -i src/components/button/index.js -f es --name &quot;myBundle&quot; -o bundle.js</code>\n        </deckgo-highlight-code>\n<blockquote>\n<p>配置文件</p>\n<p><a href=\"https://bytenote.net/article/97582337432223745\">配置</a></p>\n</blockquote>\n<deckgo-highlight-code language=\"js\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">import json from &#39;@rollup/plugin-json&#39;;\r\nimport resolve from &#39;@rollup/plugin-node-resolve&#39;;\r\n\r\nexport default {\r\n  input: &#39;src/main.js&#39;,\r\n  output: {\r\n    file: &#39;bundle.js&#39;,\r\n    format: &#39;es&#39;, // amd, cjs, es, iife, umd, system\r\n  },\r\n  output: [\r\n    {\r\n      file: &#39;bundle.js&#39;,\r\n      format: &#39;cjs&#39;,\r\n    },\r\n    {\r\n      file: &#39;bundle.min.js&#39;,\r\n      format: &#39;iife&#39;,\r\n      name: &#39;version&#39;,\r\n      plugins: [terser()], // 压缩\r\n    },\r\n  ],\r\n  plugins: [\r\n    // 解析三方npm包\r\n    resolve({\r\n      // pass custom options to the resolve plugin\r\n      moduleDirectories: [&#39;node_modules&#39;],\r\n    }),\r\n    // 解析json文件\r\n    json(),\r\n  ],\r\n  // indicate which modules should be treated as external\r\n  external: [&#39;lodash&#39;, &#39;vue&#39;],\r\n};</code>\n        </deckgo-highlight-code>\n<p>Rollup will only resolve relative module IDs by default.\r\nrollup 默认不解析引用的外部三方库，如：<code>import moment from 'moment';</code></p>\n<blockquote>\n<p>插件</p>\n</blockquote>\n<deckgo-highlight-code language=\"json\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">@rollup/plugin-json\r\nrollup-plugin-postcss \r\n@rollup/plugin-node-resolve\r\n\r\npostcss\r\npostcss-url\r\n@rollup/plugin-url </code>\n        </deckgo-highlight-code>\n<h1>webpack</h1>\n<h1><a href=\"https://vitejs.dev/\">Vite</a></h1>","id":"3efff555-a151-5519-bdd9-22c7c79007ca","parent":{"name":"打包工具","base":"打包工具.md","mtime":"2023-03-09T08:10:00.391Z","sourceInstanceName":"markdown"}}},"pageContext":{"articlePath":"/articles/前端/前端工程化/打包工具/"}},"staticQueryHashes":["3957182205"]}