{"componentChunkName":"component---src-templates-post-js","path":"/articles/前端/前端工程化/图标/","result":{"data":{"markdownRemark":{"fields":{"articlePath":"/articles/前端/前端工程化/图标/"},"html":"<ul>\n<li>canvas\n<ul>\n<li>canvas 能做什么</li>\n<li>使用场景</li>\n<li>原理</li>\n</ul>\n</li>\n<li>svg  icon-font</li>\n</ul>\n<blockquote>\n<p>显示图像的方式\r\nSVG、Image、Background-image、Iconfont、canvas\r\n<a href=\"https://jelly.jd.com/article/5c510ef9c6dc110059dafba6\">SVG vs Image, SVG vs Iconfont</a></p>\n</blockquote>\n<h1>SVG</h1>\n<blockquote>\n<p>svg: 可缩放矢量图形，可以无限放大而不失真。</p>\n</blockquote>\n<h2>元素和属性</h2>\n<deckgo-highlight-code language=\"xml\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">&lt;svg width=&quot;100&quot; height=&quot;40&quot;  viewBox=&quot;0 0 48 48&quot;&gt;</code>\n        </deckgo-highlight-code>\n<blockquote>\n<p>元素</p>\n</blockquote>\n<ul>\n<li>\n<p><code>g use  path  mask</code></p>\n</li>\n<li>\n<p><code>defs</code>：在 <code>&#x3C;defs> </code> 中定义需要重复使用的元素，用 id 标识元素，并通过  <code>&#x3C;use></code> 使用</p>\n</li>\n<li>\n<p><code>g</code>：group，组合多个元素，并将变换、样式应用到这些元素上</p>\n</li>\n<li>\n<p><code>symbol</code>：类似于 <code>g</code></p>\n</li>\n<li>\n<p><code>use</code>：实例化已经定义的元素</p>\n<p>会被 <code>&#x3C;use></code> 上设置的值覆盖的属性有：<code>x y width height href</code>\r\n其他属性不会被 <code>&#x3C;use></code> 上的值覆盖，当属性未定义时，会使用 <code>&#x3C;use></code> 上设置的属性值</p>\n</li>\n<li>\n<p><code>marker</code>:</p>\n</li>\n</ul>\n<blockquote>\n<p>属性</p>\n</blockquote>\n<ul>\n<li><code>viewBox preserveAspectRatio</code></li>\n</ul>\n<p>svg 渲染的尺寸由 width 和 height 决定；</p>\n<p>viewBox 设置了画布的尺寸和位置，所有的元素的尺寸和位置都以画布为参考对象，所有元素最终显示的尺寸和位置按照viewBox的属性和 svg 设置的 <code>width</code> 和  <code>height</code> 等比例缩放和平移；</p>\n<p><code>preserveAspectRatio</code> 指示当 svg 的 width 和 height 值与 viewBox 的宽和高不是等比例时，svg 如何对齐、缩放。除了 <code>&#x3C;image></code> 元素的其他元素，如果没有设置 <code>viewBox</code> ，那 <code>preserveAspectRatio</code> 也无效。</p>\n<ul>\n<li><code>fill</code></li>\n</ul>\n<blockquote>\n<p>React + svg</p>\n</blockquote>\n<deckgo-highlight-code language=\"react\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">const WaitApprovIcon = (props: React.SVGProps&lt;SVGSVGElement&gt;) =&gt; {\r\n  const svgProps = useSvgProps(props);\r\n  return (\r\n    &lt;svg\r\n      width=&quot;30&quot;\r\n      height=&quot;30&quot;\r\n      viewBox=&quot;0 0 30 30&quot;\r\n      {...svgProps}\r\n      xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;\r\n      &lt;g fill=&quot;none&quot; fillRule=&quot;evenodd&quot;&gt;\r\n        &lt;circle fill=&quot;#F0F0F0&quot; cx=&quot;15&quot; cy=&quot;15&quot; r=&quot;15&quot; /&gt;\r\n        &lt;circle fill=&quot;#BFBFBF&quot; cx=&quot;15&quot; cy=&quot;15&quot; r=&quot;12&quot; /&gt;\r\n        &lt;circle fill=&quot;#FFF&quot; cx=&quot;12&quot; cy=&quot;15&quot; r=&quot;1.5&quot; /&gt;\r\n        &lt;circle fill=&quot;#FFF&quot; cx=&quot;18&quot; cy=&quot;15&quot; r=&quot;1.5&quot; /&gt;\r\n      &lt;/g&gt;\r\n    &lt;/svg&gt;\r\n  );\r\n};</code>\n        </deckgo-highlight-code>\n<h2>vue+svg</h2>\n<blockquote>\n<p>svg-sprite-loader: svg 雪碧图</p>\n</blockquote>\n<ul>\n<li>样式修改</li>\n</ul>\n<deckgo-highlight-code language=\"js\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">svg path {\r\n    fill:inherit\r\n}\r\n// 或者\r\nsvg path {\r\n   fill:currentColor\r\n}</code>\n        </deckgo-highlight-code>\n<h2>参考</h2>\n<blockquote>\n<p><a href=\"https://www.zhangxinxu.com/wordpress/2014/08/svg-viewport-viewbox-preserveaspectratio/\">理解SVG viewport,viewBox,preserveAspectRatio缩放- 张鑫旭</a></p>\n<p><a href=\"https://www.zhangxinxu.com/sp/svgo/\">SVG在线压缩合并工具</a></p>\n</blockquote>\n<h1>图像 | svg 处理工具</h1>\n<ul>\n<li>压缩图像，Minify PNG, JPEG, GIF, SVG and WEBP images with imagemin\n<ul>\n<li><a href=\"https://github.com/tcoopman/image-webpack-loader\">image-webpack-loader</a></li>\n</ul>\n</li>\n<li>svg 压缩优化\n<ul>\n<li><a href=\"https://github.com/svg/svgo\">svgo</a> <a href=\"https://www.zhangxinxu.com/wordpress/2016/02/svg-compress-tool-svgo-experience/\">svgo简介</a></li>\n<li>SVGOMG</li>\n<li>mini-svg-data-uri: svg 编码为utf8，替换特殊字符</li>\n</ul>\n</li>\n<li>svg 转换为字体\n<ul>\n<li>\n<p><a href=\"https://github.com/purplebamboo/font-carrier#readme\">font-carrier</a>：svg 转换为字体的 npm 包</p>\n</li>\n<li>\n<p><a href=\"https://github.com/jantimon/iconfont-webpack-plugin\">iconfont-webpack-plugin</a>：svg 转换为字体</p>\n<deckgo-highlight-code language=\"css\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">a:before {\r\n  font-icon: url(&#39;./account.svg&#39;);\r\n}</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p><a href=\"https://www.npmjs.com/package/icon-font-loader\">icon-font-loader</a>：自动将 svg 转换成字体图标的 Webpack loader</p>\n<deckgo-highlight-code language=\"css\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">.select:after {\r\n  icon-font: url(&#39;../icons/arrow-down.svg&#39;);\r\n  color: #666;\r\n}</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p><a href=\"https://github.com/fontello/svg2ttf\">svg2ttf</a>：svg 转换为 TTF format</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><a href=\"https://juejin.cn/post/7079080370590711822#heading-4\">使用SVG构建你自己的图标库</a>\r\n使用 font-carrier 自动生成字体</p>\n</blockquote>\n<h1>iconfont</h1>\n<blockquote>\n<p>以自定义字体的形式使用图标，如：</p>\n</blockquote>\n<deckgo-highlight-code language=\"html\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">&lt;span class=&quot;iconfont eye&quot;&gt;&lt;/span&gt;\r\n&lt;style&gt;\r\n.iconfont {\r\n  @font-face {\r\n    font-family: &#39;iconfont&#39;;\r\n    src: url(&#39;./fonts/iconfont.eot&#39;); /* IE9 */\r\n    src: url(&#39;./fonts/iconfont.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */\r\n    url(&#39;./fonts/iconfont.woff&#39;) format(&#39;woff2&#39;),\r\n    url(&#39;./fonts/iconfont.woff&#39;) format(&#39;woff&#39;), /* chrome、firefox */\r\n    url(&#39;./fonts/iconfont.ttf&#39;) format(&#39;truetype&#39;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/\r\n    url(&#39;./fonts/iconfont.svg#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */\r\n  }\r\n  .iconfont {\r\n    font-family: &quot;iconfont&quot;;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n  }\r\n}\r\n&lt;/style&gt;</code>\n        </deckgo-highlight-code>\n<blockquote>\n<p>ie下面渲染不出 unicode</p>\n</blockquote>\n<p>记得使用16进制unicode的时候 加上;号，否则ie无法将它解析。10进制的没这个问题。现在大部分字体都是使用16进制标志的，主要是为了方便移动端，还有css3的那种写法。</p>\n<blockquote>\n<p>参考\r\n<a href=\"https://www.zhangxinxu.com/wordpress/2017/03/css3-font-face-src-local/\">font-face</a>\r\n<a href=\"http://purplebamboo.github.io/2014/01/09/iconfont/\">iconfont 记录</a></p>\n</blockquote>\n<h1>canvas</h1>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API\">canvas教程-mdn</a>\r\n<a href=\"https://mp.weixin.qq.com/s/T8Bd3hOXbAnxS5Te9l1V8w\">canvas 画分形图</a></p>\n<h1>emoji</h1>\n<blockquote>\n<p><a href=\"https://juejin.cn/post/6844903637555101704\">unicode与emoji</a></p>\n<p><code>String.fromCodePoint</code> <code>str.codePointAt</code></p>\n</blockquote>","id":"faeb0dd2-e086-5263-9f2a-38c942d41a3f","parent":{"name":"图标","base":"图标.md","mtime":"2023-03-09T08:10:00.391Z","sourceInstanceName":"markdown"}}},"pageContext":{"articlePath":"/articles/前端/前端工程化/图标/"}},"staticQueryHashes":["3957182205"]}