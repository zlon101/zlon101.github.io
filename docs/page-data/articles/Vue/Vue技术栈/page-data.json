{"componentChunkName":"component---src-templates-post-js","path":"/articles/Vue/Vue技术栈/","result":{"data":{"markdownRemark":{"fields":{"articlePath":"/articles/Vue/Vue技术栈/"},"html":"<h1>Vue全家桶</h1>\n<ul>\n<li>vuex：状态管理</li>\n<li>vue-router：路由</li>\n<li>vue-resource &#x26; axios(通用)：http请求</li>\n<li>vuelidate：表单验证</li>\n</ul>\n<h1>Vuex</h1>\n<h2>1. 基本使用</h2>\n<deckgo-highlight-code language=\"js\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">import Vuex from &#39;vuex&#39;;\r\nimport Vue from &#39;vue&#39;;\r\n\r\nVue.use(Vuex);\r\n\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        count: 0\r\n    },\r\n    // 读取状态, 插值表达式{{ $store.getters.doubleCount }}\r\n    getters: {\r\n        // 类似计算属性computed, 起到缓存的作用\r\n        doubleCount(state){\r\n            return state.count * 2;\r\n        }\r\n    }\r\n    \r\n    /*\r\n\tmutations:\r\n    \t由组件触发:\r\n    \t&lt;button @click=&quot;$store.commit(&#39;increment&#39;, 2)&quot;&gt;触发commit&lt;/button&gt;\r\n    */\r\n    mutations: {\r\n        increment(state, newV){\r\n            state.count = state.count + newV;\r\n        }\r\n    },\r\n    \r\n    /*\r\n    触发方式\r\n    \t&lt;button @click=&quot;$store.dispatch(&#39;incrementAction&#39;, 2)&quot;&gt;触发dispatch&lt;/button&gt;\r\n    \t\r\n    \tactions 应该避免直接操作 state，state 的更改应该由 mutations 完成, 否则vue-devtools插件无法记录state的变更。\r\n    \tactions 可以根据当前 state 进一步处理数据, 计算或请求后端接口, 然后通过commit的方式提交给mutations去处理。\r\n\r\n    */\r\n    actions: {\r\n        incrementAction(ctx, newV){\r\n            let commit = ctx.commit;\r\n            setTimeout( () =&gt; commit(&#39;increment&#39;), 3000);\r\n        }\r\n    }\r\n});\r\n\r\nnew Vue({\r\n    store: store,\t\t// 在组件实例中通过this.$store访问该store\r\n    render: h =&gt; h(App)\r\n}).$mount(&#39;#app&#39;);\r\n\r\n// 在组件实例中读取store\r\ncomputed: {\r\n\tcount(){\r\n        return this.$store.state.count;\r\n    }\r\n}\r\n\r\n// 修改store\r\n</code>\n        </deckgo-highlight-code>\n<h2>2. 核心概念和原理</h2>\n<p><img src=\"assets/Vue%E6%8A%80%E6%9C%AF%E6%A0%88/1561195170226.png\" alt=\"1561195170226\" style=\"zoom: 67%;\" />   <img src=\"assets/Vue%E6%8A%80%E6%9C%AF%E6%A0%88/1561203551146.png\" alt=\"1561203551146\" style=\"zoom:67%;\" /></p>\n<ul>\n<li>\n<p><strong>vuex底层实现</strong></p>\n<deckgo-highlight-code language=\"js\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">// 简化版Vuex vue-min.js\r\nimport Vue from &#39;vue&#39;\r\nconst Store = function Store (options = {}) {\r\n  const {state = {}, mutations={}} = options;\r\n  this._vm = new Vue({\r\n    data: {\r\n      $$state: state\r\n    },\r\n  })\r\n  this._mutations = mutations\r\n}\r\n\r\nStore.prototype.commit = function(type, payload){\r\n  if(this._mutations[type]) {\r\n    // this.state访问的是原型上面的state 数据项\r\n    this._mutations[type](this.state, payload)\r\n  }\r\n}\r\n\r\nObject.defineProperties(Store.prototype, { \r\n  state: { \r\n    get: function(){\r\n      // this._vm._data 而不是 _vm.data,  \r\n      return this._vm._data.$$state\r\n    } \r\n  }\r\n});\r\nexport default {Store}\r\n\r\n// 使用简化版Vuex\r\nimpore vuexMin from &#39;vue-min.js&#39;;\r\n\r\nconst store = new vuexMin.Store({\r\n    state: {\r\n        count: 0\r\n    },\r\n    mutations: {\r\n        increment(state, newV){\r\n            state.count = state.count + newV;\r\n        }\r\n    }\r\n})\r\n\r\nVue.prototype.$store = store;\r\nnew Vue({\r\n    el: &#39;xx&#39;,\r\n    rendre: ...\r\n});</code>\n        </deckgo-highlight-code>\n</li>\n</ul>\n<h2>1. Vuex结构</h2>\n<table style='width:50px'>\r\n<tr>\r\n\t<th colspan=\"2\">this.$store</th>\r\n</tr>\r\n<tr>\r\n\t<td rowspan=\"2\" style='vertical-align:center'>getter</td>\r\n\t<td>action</td>\r\n</tr>\r\n<tr>\r\n\t<td>mution</td>\r\n</tr>\r\n<tr>\r\n\t<td colspan=\"2\">this.$store.state</td>\r\n</tr>\r\n</table>","id":"53395c0a-5765-560b-ab1f-06f505b57ff3","parent":{"name":"Vue技术栈","base":"Vue技术栈.md","mtime":"2023-03-08T03:39:22.000Z","sourceInstanceName":"markdown"}}},"pageContext":{"articlePath":"/articles/Vue/Vue技术栈/"}},"staticQueryHashes":["3957182205"]}